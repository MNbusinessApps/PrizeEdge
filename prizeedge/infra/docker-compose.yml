version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: prizeedge-postgres
    environment:
      POSTGRES_DB: prizeedge
      POSTGRES_USER: prizeedge
      POSTGRES_PASSWORD: prizeedge123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prizeedge -d prizeedge"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - prizeedge-network

  # Redis for caching and pub/sub
  redis:
    image: redis:7-alpine
    container_name: prizeedge-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - prizeedge-network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: prizeedge-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://prizeedge:prizeedge123@postgres:5432/prizeedge
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./data:/app/data
    networks:
      - prizeedge-network
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend Web (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: prizeedge-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - prizeedge-network
    restart: unless-stopped

  # Mobile App (Expo development server)
  mobile:
    build:
      context: ./mobile
      dockerfile: Dockerfile
    container_name: prizeedge-mobile
    ports:
      - "19000:19000"
      - "19001:19001"
    environment:
      - EXPO_USE_STATIC=1
      - REACT_NATIVE_PACKAGER_HOSTNAME=localhost
    depends_on:
      - backend
    volumes:
      - ./mobile:/app
      - /app/node_modules
    networks:
      - prizeedge-network
    restart: unless-stopped

  # Celery Worker for background tasks
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: prizeedge-worker
    environment:
      - DATABASE_URL=postgresql://prizeedge:prizeedge123@postgres:5432/prizeedge
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./data:/app/data
    networks:
      - prizeedge-network
    restart: unless-stopped
    command: celery -A app.worker worker --loglevel=info

volumes:
  postgres_data:
  redis_data:

networks:
  prizeedge-network:
    driver: bridge